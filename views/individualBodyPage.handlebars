<main>
	<script src="/templates/body_resource_deposit_item.js" defer></script>
	<script>
		function returnToListPage() {
			window.location = document.referrer;
		}

		function editCancel() {
			returnToListPage();
		}

		function editAccept() {
			var creationForm = document.forms["body-form"];

			var fields_errors = {
				"body-name": "Body name cannot be blank.",
				"body-type": "You must choose a body type.",
				"body-orbital-radius": "Body orbital radius cannot be blank.",
				"body-theta": "Body theta cannot be blank.",
				"parent-system-name": "You must choose a parent system."
			};
			if (errorIfBlank(creationForm, fields_errors)) {
				return;
			}

			var bodyContext = {
{{#unlessEquals type "create"}}
				bodyID: {{body.bodyID}} + "",
{{/unlessEquals}}
				name: creationForm["body-name"].value,
				type: creationForm["body-type"].value,
				orbitalRadius: creationForm["body-orbital-radius"].value,
				theta: creationForm["body-theta"].value,
				parentSystemID: creationForm["parent-system-name"].dataset.id
			};

			bodyContext.resourceDeposits = [];
			var resourceDeposits = document.getElementsByClassName("resource-deposit-quantity");
			for (var i = 0; i < resourceDeposits.length; i++) {
				var resourceDeposit = resourceDeposits[i];

				if (resourceDeposit.value.trim().length == 0) {
					createErrorModal("Resource deposit quantities cannot be blank.");
					return;
				}

				bodyContext.resourceDeposits.push({
					resourceID: resourceDeposit.parentElement.parentElement.firstElementChild.lastElementChild.lastElementChild.dataset.id,
					quantity: resourceDeposit.value
				});
			}

{{#switch type}}
	{{#case "create"}}
			bodyContext.planetType = (bodyContext.type == "planet") ? PLANET_TYPES[0] : null;
			postToServer("/bodies/add", bodyContext, () => returnToListPage());
	{{/case}}
	{{#case "edit"}}
			postToServer("/bodies/update/{{body.bodyID}}", bodyContext, () => returnToListPage());
	{{/case}}
{{/switch}}
		}

		function createNewResourceDeposit() {
			var resourceDepositList = document.getElementById("resource-deposit-list");
			var resourceDepositHTML = Handlebars.templates.bodyResourceDepositItem({
				type: "{{type}}",
{{#unlessEquals type "create"}}
				bodyID: {{body.bodyID}},
{{/unlessEquals}}
				create: true
			});
			resourceDepositList.insertAdjacentHTML("beforeend", resourceDepositHTML);
			var newDeposit = resourceDepositList.lastElementChild;
			registerNewSearchBar("resource-search-bar", "resource-search-list");
		}

{{#unlessEquals type "view"}}
		function setResourceAvailability(resourceID, available) {
			var resourceSearchItems = document.getElementById("resource-search-list").children;
			for (var i = 0; i < resourceSearchItems.length; i++) {
				if (resourceSearchItems[i].dataset.id == resourceID) {
					if (available) {
						resourceSearchItems[i].classList.remove("hidden-used");
					} else {
						resourceSearchItems[i].classList.add("hidden-used");
					}
					break;
				}
			}

			var allUnavailable = true;
			for (var i = 0; i < resourceSearchItems.length; i++) {
				if (!resourceSearchItems[i].classList.contains("hidden-used")) {
					allUnavailable = false;
					break;
				}
			}

			document.getElementById("create-resource-deposit-button").disabled = allUnavailable;
			if (allUnavailable) {
				document.getElementById("resources-unavailable-text").classList.remove("hidden");
			} else {
				document.getElementById("resources-unavailable-text").classList.add("hidden");
			}
		}

		function moveResourceSearchList() {
			var searchList = document.getElementById("resource-search-list");
			var searchListContainer = document.getElementById("resource-search-list-container");
			searchListContainer.appendChild(searchList);
		}
{{/unlessEquals}}

		window.addEventListener("DOMContentLoaded", function() {
			document.getElementById("cancel-button").addEventListener("click", editCancel);

			var accept_button = document.getElementById("accept-button");
			if (accept_button) accept_button.addEventListener("click", editAccept);

			// console.log("{{{body.planetType}}}");

{{#unlessEquals type "view"}}
			var systemSearchList = JSON.parse(decodeURIComponent("{{{encoded_system_search_list}}}"));
			setupSearchList(systemSearchList, ["system-search-bar"], "system-search-list", "systemID", "name", false, null, null);

			var resourceSearchList = JSON.parse(decodeURIComponent("{{{encoded_resource_search_list}}}"));
			setupSearchList(resourceSearchList, [], "resource-search-list", "resourceID", "name", false, (searchBar) => {
				var resource = resourceSearchList.find(e => e.resourceID == searchBar.dataset.id);

				var parent = searchBar.parentElement;

				var resourceColorSwab = document.createElement("div");
				resourceColorSwab.classList.add("color-swab");
				resourceColorSwab.style.backgroundColor = resource.color;

				var resourceName = document.createElement("div");
				resourceName.dataset.id = searchBar.dataset.id;
				resourceName.innerHTML = searchBar.value;

				setResourceAvailability(searchBar.dataset.id, false);

				parent.appendChild(resourceColorSwab);
				parent.appendChild(resourceName);

				searchBar.remove();
			}, (searchList, searchBar) => {
				moveResourceSearchList();
				searchBar.parentElement.parentElement.remove();
			});

			{{#unlessEquals type "create"}}
				var resourceDepositIDs = JSON.parse(decodeURIComponent("{{{encoded_body_resource_deposit_ids}}}"));
				for (var i = 0; i < resourceDepositIDs.length; i++) {
					setResourceAvailability(resourceDepositIDs[i], false);
				}
			{{/unlessEquals}}
{{/unlessEquals}}
		});
	</script>
	<div class="page-container has-right-col">
		<div class="left-col">
			<h2>
				{{#switch type}}
					{{#case "view"}} View Body {{/case}}
					{{#case "create"}} Create New Body {{/case}}
					{{#case "edit"}} Edit Body {{/case}}
				{{/switch}}
			</h2>
			<form name="body-form" {{#ifEquals type "view"}}class="immutable"{{/ifEquals}}>
				<table>
					<tr>
						<td>
							<label>Name:</label>
						</td>
						<td>
							<input type="text" id="body-name" name="body-name" value="{{body.name}}" {{#ifEquals type "view"}}readonly{{/ifEquals}}>
						</td>
					</tr>
					<tr>
						<td>
							<label>Type:</label>
						</td>
						<td>
							<input type="radio" id="body-type-planet" name="body-type" value="planet" {{#if (isEqual body.type "planet")}}checked{{else}}{{#ifEquals type "view"}}disabled{{/ifEquals}}{{/if}}>
							<label for="body-type-planet">Planet</label><br>
							<input type="radio" id="body-type-asteroid" name="body-type" value="asteroid" {{#if (isEqual body.type "asteroid")}}checked{{else}}{{#ifEquals type "view"}}disabled{{/ifEquals}}{{/if}}>
							<label for="body-type-asteroid">Asteroid</label><br>
						</td>
					</tr>
					<tr>
						<td>
							<label>Orbital Radius:</label>
						</td>
						<td>
							<input type="number" id="body-orbital-radius" name="body-orbital-radius" min="0.1" max="1.0" value="{{body.orbitalRadius}}" step="0.01" {{#ifEquals type "view"}}readonly{{/ifEquals}}>
						</td>
					</tr>
					<tr>
						<td>
							<label>Theta:</label>
						</td>
						<td>
							<input type="number" id="body-theta" name="body-theta" min="0" max="360" value="{{body.theta}}" {{#ifEquals type "view"}}readonly{{/ifEquals}}>
						</td>
					</tr>
					<tr>
						<td>
							<label>Parent System:</label>
						</td>
						<td>
							<input type="text" id="system-search-bar" class="list-search-bar" name="parent-system-name" data-id="{{body.systemID}}" value="{{parent_system_name}}" {{#ifEquals type "view"}}readonly{{/ifEquals}}>
							<div class="search-list hidden" id="system-search-list" tabindex="-1"></div>
							<a href="/systems/view/{{body.systemID}}"><button type="button" id="body-go-to-parent-system-button">Go To</button></a>
					</tr>
				</table>
			</form>
			<h3>Resource Deposits</h3>
			{{#unlessEquals type "view"}}
			<div>
				<button type="button" id="create-resource-deposit-button" onclick="createNewResourceDeposit()">Create New Resource Deposit</button>
				<span id="resources-unavailable-text">A resource deposit exists for each resource, so no new ones can be created.</span>
			</div>
			{{/unlessEquals}}
			<table id="resource-deposit-table">
				<thead>
					<tr>
						<th>Resource</th>
						<th>Quantity</th>
					</tr>
				</thead>
				<tbody id="resource-deposit-list">
					{{#each body_resource_deposits}}
						{{> bodyResourceDepositItem bodyID=../body.bodyID readonly=(isEqual ../type "view") }}
					{{/each}}
				</tbody>
			</table>
			<div id="resource-search-list-container">
				<div id="resource-search-list" class="search-list hidden" tabindex="-1"></div>
			</div>
			<div>
				{{#unlessEquals type "view"}}
				<button id="accept-button">
					{{#switch type}}
						{{#case "create"}} Create {{/case}}
						{{#case "edit"}} Save {{/case}}
					{{/switch}}
				</button>
				{{/unlessEquals}}
				<button id="cancel-button">
					{{#switch type}}
						{{#case "view"}} Return {{/case}}
						{{#case "create"}} Cancel {{/case}}
						{{#case "edit"}} Cancel {{/case}}
					{{/switch}}
				</button>
			</div>
		</div>
		<div class="right-col">
			{{#unlessEquals type "create"}}
				{{#switch body.type}}
					{{#case "asteroid"}}<img id="body-image" src="/bodies/asteroid.png" />{{/case}}
					{{#case "planet"}}<img id="body-image" src="/bodies/{{body.planetType}}.png" />{{/case}}
				{{/switch}}
			{{/unlessEquals}}
		</div>
	</div>
	</main>

